[kernel] Parsing isp_floating_limitations.c (with preprocessing)
[isp] No entry point was specified! The default entry point "main" will be used.
[isp] Execute Eva with entry point "main"
[eva] Analyzing an incomplete application starting at main
[eva:initial-state] Values of globals at initialization
  X ∈ [--..--]
  XMAX ∈ [--..--]
  Y ∈ [-1.79769313486e+308 .. 1.79769313486e+308]
  YMAX ∈ [-1.79769313486e+308 .. 1.79769313486e+308]
[eva:alarm] isp_floating_limitations.c:13: Warning: 
  function main: precondition X ≥ 0 ∧ X ≤ 30 got status unknown.
[eva:alarm] isp_floating_limitations.c:14: Warning: 
  function main: precondition XMAX ≡ 30 got status unknown.
[eva:alarm] isp_floating_limitations.c:18: Warning: 
  function main: precondition Y ≥ 0.0 ∧ Y ≤ 30.0 got status unknown.
[eva:alarm] isp_floating_limitations.c:19: Warning: 
  function main: precondition YMAX ≡ 30.0 got status unknown.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  1 function analyzed (out of 1): 100% coverage.
  In this function, 5 statements reached (out of 5): 100% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  0 alarms generated by the analysis.
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        2 valid     0 unknown     0 invalid      2 total
    Preconditions     0 valid     0 unknown     0 invalid      0 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[isp] Eva analysis is completed.
[isp] The transformed source code:
/* Generated by Frama-C */
int X;
int XMAX;
double Y;
double YMAX;
/*@ requires \valid(&X);
    requires \valid(&XMAX);
    requires X ≥ 0 ∧ X ≤ 30;
    requires XMAX ≡ 30;
    requires \valid(&Y);
    requires \valid(&YMAX);
    requires Y ≥ 0.0 ∧ Y ≤ 30.0;
    requires YMAX ≡ 30.0;
    requires \is_finite(\div_double(Y, YMAX));
    requires \is_finite(\mul_double(\div_double(Y, YMAX), (double)100.0));
    
    behavior isp_generated:
      assumes \true;
      requires X ≥ 0;
      requires X ≤ 30;
      requires XMAX ≡ 30;
      requires YMAX ≡ 30.;
      requires Y ≥ -0. ∧ Y ≤ 30.;
      requires \valid_read(&X);
      requires \valid_read(&XMAX);
      requires \valid_read(&YMAX);
      requires \valid_read(&Y);
      assigns \nothing;
 */
void main(void)
{
  int i = (X / XMAX) * 100;
  /*@ assert i ∈ {0, 100}; */ ;
  double j = (Y / YMAX) * 100.0;
  /*@ assert j ≥ 0.0 ∧ j ≤ 100.0; */ ;
  return;
}


