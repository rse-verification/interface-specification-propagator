[kernel] Parsing isp_test_012.c (with preprocessing)
[isp] No entry point was specified! The default entry point "main" will be used.
[isp] Execute Eva with entry point "main"
[eva] Analyzing an incomplete application starting at main
[eva:initial-state] Values of globals at initialization
  X[0..4] ∈ [-1.79769313486e+308 .. 1.79769313486e+308]
  Y[0..1] ∈ [-1.79769313486e+308 .. 1.79769313486e+308]
[eva:alarm] isp_test_012.c:18: Warning: 
  function main, behavior interface_spec: precondition X[0 .. 3] ≡ 1.0 ∨
                                                       X[0 .. 3] ≡ 2.0 got status unknown.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  2 functions analyzed (out of 2): 100% coverage.
  In these functions, 4 statements reached (out of 4): 100% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  0 alarms generated by the analysis.
  ----------------------------------------------------------------------------
  No logical properties have been reached by the analysis.
  ----------------------------------------------------------------------------
[isp] Eva analysis is completed.
[isp] The transformed source code:
/* Generated by Frama-C */
double X[5];
double Y[2];
/*@ behavior isp_generated:
      assumes \true;
      requires X[3] ≥ 1. ∧ X[3] ≤ 2.;
      requires X[1] ≥ 1. ∧ X[1] ≤ 2.;
      requires X[2] ≥ 1. ∧ X[2] ≤ 2.;
      requires X[0] ≥ 1. ∧ X[0] ≤ 2.;
      requires \valid_read(&X[3]);
      requires \valid_read(&X[1]);
      requires \valid_read(&X[2]);
      requires \valid_read((double *)X);
      ensures \result ≥ 4. ∧ \result ≤ 8.;
      assigns \nothing;
 */
double first_4_sum(void)
{
  double __retres;
  __retres = ((X[0] + X[1]) + X[2]) + X[3];
  return __retres;
}

/*@ behavior interface_spec:
      assumes \true;
      requires \valid_read(&X[0 .. 3]);
      requires \valid_read(&Y[1]);
      requires \valid(&Y[1]);
      requires X[0 .. 3] ≡ 1.0 ∨ X[0 .. 3] ≡ 2.0;
      assigns Y[1];
    
    behavior isp_generated:
      assumes \true;
      requires X[3] ≥ 1. ∧ X[3] ≤ 2.;
      requires X[1] ≥ 1. ∧ X[1] ≤ 2.;
      requires X[2] ≥ 1. ∧ X[2] ≤ 2.;
      requires X[0] ≥ 1. ∧ X[0] ≤ 2.;
      requires \valid_read(&Y[1]);
      requires \valid(&Y[1]);
      requires \valid_read(&X[3]);
      requires \valid_read(&X[1]);
      requires \valid_read(&X[2]);
      requires \valid_read((double *)X);
      ensures Y[1] ≥ 4. ∧ Y[1] ≤ 8.;
      assigns Y[1];
 */
void main(void)
{
  Y[1] = first_4_sum();
  return;
}


