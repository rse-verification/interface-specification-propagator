[kernel] Parsing isp_025_fn_args_pbv_if_failing.c (with preprocessing)
[isp] No entry point was specified! The default entry point "main" will be used.
[isp] Execute Eva with entry point "main"
[eva] Analyzing an incomplete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[eva:initial-state] Values of globals at initialization
  X ∈ [--..--]
[eva:alarm] isp_025_fn_args_pbv_if_failing.c:20: Warning: 
  function main, behavior interface_spec: precondition X ∈ {1, 2} got status unknown.
[eva:alarm] isp_025_fn_args_pbv_if_failing.c:21: Warning: 
  function main, behavior interface_spec: postcondition got status unknown.
[eva] done for function main
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  2 functions analyzed (out of 2): 100% coverage.
  In these functions, 6 statements reached (out of 6): 100% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  0 alarms generated by the analysis.
  ----------------------------------------------------------------------------
  No logical properties have been reached by the analysis.
  ----------------------------------------------------------------------------
[isp] Eva analysis is completed.
[isp] The transformed source code:
/* Generated by Frama-C */
int X;
/*@ requires y ∈ {1, 2};
    requires x ∈ {1, 2};
    requires x ∈ {1, 2};
    ensures \result ∈ {1, 2, 3};
    assigns \nothing;
 */
int increment(int x, int y)
{
  if (y == 1) {
    x = 2;
    x ++;
  }
  return x;
}

/*@ requires X ∈ {1, 2};
    requires \valid_read(&X);
    ensures \result ∈ {1, 2, 3};
    assigns \nothing;
    
    behavior interface_spec:
      assumes \true;
      requires \valid_read(&X);
      requires X ∈ {1, 2};
      ensures \result ∈ {2, 3};
      assigns \nothing;
 */
int main(void)
{
  int temp = increment(X,X);
  return temp;
}


