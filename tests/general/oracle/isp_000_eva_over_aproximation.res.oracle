[kernel] Parsing isp_000_eva_over_aproximation.c (with preprocessing)
[isp] Execute Eva with entry point "calculate"
[eva] Analyzing an incomplete application starting at calculate
[eva] Computing initial state
[eva] Initial state computed
[eva:initial-state] Values of globals at initialization
  X ∈ [--..--]
  Y ∈ [--..--]
[eva:alarm] isp_000_eva_over_aproximation.c:11: Warning: 
  function calculate: precondition X ∈ (0 .. 10) got status unknown.
[eva:alarm] isp_000_eva_over_aproximation.c:12: Warning: 
  function calculate: precondition Y ∈ (0 .. 20) got status unknown.
[eva] done for function calculate
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  1 function analyzed (out of 1): 100% coverage.
  In this function, 8 statements reached (out of 8): 100% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  0 alarms generated by the analysis.
  ----------------------------------------------------------------------------
  No logical properties have been reached by the analysis.
  ----------------------------------------------------------------------------
[isp] Eva analysis is completed.
[isp] The transformed source code:
/* Generated by Frama-C */
int X;
int Y;
/*@ requires X ≥ 0;
    requires X ≤ 10;
    requires Y ≥ 0;
    requires Y ≤ 20;
    requires \valid_read(&X);
    requires \valid_read(&Y);
    requires \valid_read(&Y);
    requires \valid_read(&X);
    requires X ∈ (0 .. 10);
    requires Y ∈ (0 .. 20);
    ensures \result ≥ -10;
    ensures \result ≤ 10;
    assigns \nothing;
 */
int calculate(void)
{
  int __retres;
  if (Y > X) {
    __retres = 0;
    goto return_label;
  }
  else {
    __retres = X - Y;
    goto return_label;
  }
  return_label: return __retres;
}


