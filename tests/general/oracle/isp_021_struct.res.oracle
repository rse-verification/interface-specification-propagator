[kernel] Parsing isp_021_struct.c (with preprocessing)
[isp] No entry point was specified! The default entry point "main" will be used.
[isp] Execute Eva with entry point "main"
[eva] Analyzing an incomplete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[eva:initial-state] Values of globals at initialization
  X ∈ [--..--]
  Y ∈ [--..--]
[eva:alarm] isp_021_struct.c:24: Warning: 
  function main, behavior interface_spec: precondition X ≡ 1 got status unknown.
[eva] done for function main
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  1 function analyzed (out of 1): 100% coverage.
  In this function, 4 statements reached (out of 4): 100% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  0 alarms generated by the analysis.
  ----------------------------------------------------------------------------
  No logical properties have been reached by the analysis.
  ----------------------------------------------------------------------------
[isp] Eva analysis is completed.
[isp] The transformed source code:
/* Generated by Frama-C */
struct __anonstruct_MY_STRUCT_1 {
   int a ;
   int b ;
   int c ;
};
typedef struct __anonstruct_MY_STRUCT_1 MY_STRUCT;
int X;
MY_STRUCT Y;
/*@ behavior interface_spec:
      assumes \true;
      requires \valid_read(&X);
      requires \valid_read(&Y.a);
      requires \valid_read(&Y.b);
      requires \valid_read(&Y.c);
      requires \valid(&Y.a);
      requires \valid(&Y.b);
      requires \valid(&Y.c);
      requires X ≡ 1;
      ensures Y.a ≡ 1 ∧ Y.b ≡ 2 ∧ Y.c ≡ 3;
      assigns Y.a, Y.b, Y.c;
    
    behavior isp_generated:
      assumes \true;
      requires X ≡ 1;
      requires \valid_read(&Y.c);
      requires \valid(&Y.c);
      requires \valid_read(&Y.a);
      requires \valid(&Y.a);
      requires \valid_read(&Y.b);
      requires \valid(&Y.b);
      requires \valid_read(&X);
      ensures Y.c ≡ 3;
      ensures Y.a ≡ 1;
      ensures Y.b ≡ 2;
      assigns Y.b, Y.a, Y.c;
 */
void main(void)
{
  Y.a = X;
  Y.b = 2 * X;
  Y.c = 3 * X;
  return;
}


